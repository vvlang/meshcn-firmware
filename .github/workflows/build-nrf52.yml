name: Build nRF52 Firmware

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'src/**'
      - 'variants/nrf52840/**'
      - 'arch/nrf52/**'
      - 'bin/build-nrf52.sh'
      - 'platformio.ini'
  pull_request:
    branches: [ main ]
    paths:
      - 'src/**'
      - 'variants/nrf52840/**'
      - 'arch/nrf52/**'
      - 'bin/build-nrf52.sh'
      - 'platformio.ini'
  release:
    types: [ published ]
  workflow_dispatch:
    inputs:
      target:
        description: 'nRF52 target to build'
        required: true
        default: 'nrf52_promicro_diy_tcxo'
        type: choice
        options:
          - nrf52_promicro_diy_tcxo
          - nrf52_promicro_diy-inkhud
          - rak4631
          - nano-g2-ultra
          - wio-tracker-wm1110
          - canaryone
          - heltec-mesh-node-t114
          - tracker-t1000-e
          - t-echo

jobs:
  build-nrf52:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # 获取完整历史记录，用于版本信息

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install PlatformIO Core
      run: |
        pip install platformio

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y git build-essential

    - name: Set up build environment
      run: |
        # 创建必要的目录
        mkdir -p release/
        
        # 设置环境变量
        echo "PLATFORMIO_BUILD_FLAGS=" >> $GITHUB_ENV
        
        # 确保构建脚本有执行权限
        chmod +x bin/build-nrf52.sh
        chmod +x bin/buildinfo.py
        chmod +x bin/uf2conv.py
        chmod +x bin/mergehex

    - name: Build nRF52 firmware
      run: |
        # 根据触发方式确定构建目标
        if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
          TARGET="${{ github.event.inputs.target }}"
        else
          TARGET="nrf52_promicro_diy_tcxo"
        fi
        
        echo "Building target: $TARGET"
        
        # 运行构建脚本
        ./bin/build-nrf52.sh $TARGET
        
        # 显示构建结果
        echo "Build completed. Files in release/:"
        ls -la release/

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: nrf52-firmware-${{ github.sha }}
        path: release/
        retention-days: 30

    - name: Create Release
      if: github.event_name == 'release' || github.event_name == 'workflow_dispatch'
      uses: softprops/action-gh-release@v2
      with:
        files: |
          release/*.uf2
          release/*.hex
          release/*.zip
          release/*.elf
        tag_name: ${{ github.ref_name }}
        name: nRF52 Firmware Release ${{ github.ref_name }}
        body: |
          ## nRF52 固件发布
          
          ### 构建信息
          - **提交**: ${{ github.sha }}
          - **分支**: ${{ github.ref_name }}
          - **构建时间**: ${{ github.run_number }}
          
          ### 固件文件
          - `.uf2` - UF2格式固件，可直接拖拽到设备
          - `.hex` - HEX格式固件，用于传统烧录工具
          - `.zip` - OTA更新包
          - `.elf` - ELF调试文件
          
          ### 安装说明
          1. 下载对应的固件文件
          2. 将设备置于DFU模式
          3. 拖拽`.uf2`文件到设备或使用烧录工具烧录`.hex`文件
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
