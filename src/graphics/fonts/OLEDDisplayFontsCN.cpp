#ifdef OLED_CN

#include "OLEDDisplayFontsCN.h"

// 中文字体数据 - 10pt
// 包含常用汉字和标点符号
const uint8_t ArialMT_Plain_10_CN[] PROGMEM = {
    0x0A, // Width: 10
    0x0D, // Height: 13
    0x20, // First char: 32 (space)
    0xE0, // Number of chars: 224

    // 基础ASCII字符 (32-127)
    0xFF, 0xFF, 0x00, 0x0A, // 32: space
    0x00, 0x00, 0x04, 0x03, // 33: !
    0x00, 0x04, 0x05, 0x04, // 34: "
    0x00, 0x09, 0x09, 0x06, // 35: #
    0x00, 0x12, 0x0A, 0x06, // 36: $
    0x00, 0x1C, 0x10, 0x09, // 37: %
    0x00, 0x2C, 0x0E, 0x08, // 38: &
    0x00, 0x3A, 0x01, 0x02, // 39: '
    0x00, 0x3B, 0x06, 0x04, // 40: (
    0x00, 0x41, 0x06, 0x04, // 41: )
    0x00, 0x47, 0x05, 0x04, // 42: *
    0x00, 0x4C, 0x09, 0x06, // 43: +
    0x00, 0x55, 0x04, 0x03, // 44: ,
    0x00, 0x59, 0x03, 0x03, // 45: -
    0x00, 0x5C, 0x04, 0x03, // 46: .
    0x00, 0x60, 0x05, 0x04, // 47: /
    
    // 数字 0-9
    0x00, 0x65, 0x0A, 0x06, // 48: 0
    0x00, 0x6F, 0x08, 0x05, // 49: 1
    0x00, 0x77, 0x0A, 0x06, // 50: 2
    0x00, 0x81, 0x0A, 0x06, // 51: 3
    0x00, 0x8B, 0x0B, 0x07, // 52: 4
    0x00, 0x96, 0x0A, 0x06, // 53: 5
    0x00, 0xA0, 0x0A, 0x06, // 54: 6
    0x00, 0xAA, 0x09, 0x06, // 55: 7
    0x00, 0xB3, 0x0A, 0x06, // 56: 8
    0x00, 0xBD, 0x0A, 0x06, // 57: 9
    
    // 标点符号
    0x00, 0xC7, 0x04, 0x03, // 58: :
    0x00, 0xCB, 0x04, 0x03, // 59: ;
    0x00, 0xCF, 0x0A, 0x06, // 60: <
    0x00, 0xD9, 0x09, 0x06, // 61: =
    0x00, 0xE2, 0x09, 0x06, // 62: >
    0x00, 0xEB, 0x0B, 0x07, // 63: ?
    0x00, 0xF6, 0x14, 0x0B, // 64: @
    
    // 大写字母 A-Z
    0x01, 0x0A, 0x0E, 0x08, // 65: A
    0x01, 0x18, 0x0C, 0x07, // 66: B
    0x01, 0x24, 0x0C, 0x07, // 67: C
    0x01, 0x30, 0x0B, 0x07, // 68: D
    0x01, 0x3B, 0x0C, 0x07, // 69: E
    0x01, 0x47, 0x09, 0x06, // 70: F
    0x01, 0x50, 0x0D, 0x08, // 71: G
    0x01, 0x5D, 0x0C, 0x07, // 72: H
    0x01, 0x69, 0x04, 0x03, // 73: I
    0x01, 0x6D, 0x08, 0x05, // 74: J
    0x01, 0x75, 0x0E, 0x08, // 75: K
    0x01, 0x83, 0x0C, 0x07, // 76: L
    0x01, 0x8F, 0x10, 0x09, // 77: M
    0x01, 0x9F, 0x0C, 0x07, // 78: N
    0x01, 0xAB, 0x0E, 0x08, // 79: O
    0x01, 0xB9, 0x0B, 0x07, // 80: P
    0x01, 0xC4, 0x0E, 0x08, // 81: Q
    0x01, 0xD2, 0x0C, 0x07, // 82: R
    0x01, 0xDE, 0x0C, 0x07, // 83: S
    0x01, 0xEA, 0x0B, 0x07, // 84: T
    0x01, 0xF5, 0x0C, 0x07, // 85: U
    0x02, 0x01, 0x0E, 0x08, // 86: V
    0x02, 0x0F, 0x10, 0x09, // 87: W
    0x02, 0x1F, 0x0E, 0x08, // 88: X
    0x02, 0x2D, 0x0E, 0x08, // 89: Y
    0x02, 0x3B, 0x0B, 0x07, // 90: Z
    
    // 小写字母 a-z
    0x02, 0x46, 0x0A, 0x06, // 97: a
    0x02, 0x50, 0x0A, 0x06, // 98: b
    0x02, 0x5A, 0x09, 0x06, // 99: c
    0x02, 0x63, 0x0A, 0x06, // 100: d
    0x02, 0x6D, 0x0A, 0x06, // 101: e
    0x02, 0x77, 0x06, 0x04, // 102: f
    0x02, 0x7D, 0x0A, 0x06, // 103: g
    0x02, 0x87, 0x0A, 0x06, // 104: h
    0x02, 0x91, 0x04, 0x03, // 105: i
    0x02, 0x95, 0x05, 0x03, // 106: j
    0x02, 0x9A, 0x0A, 0x06, // 107: k
    0x02, 0xA4, 0x04, 0x03, // 108: l
    0x02, 0xA8, 0x0E, 0x08, // 109: m
    0x02, 0xB6, 0x0A, 0x06, // 110: n
    0x02, 0xC0, 0x0A, 0x06, // 111: o
    0x02, 0xCA, 0x0A, 0x06, // 112: p
    0x02, 0xD4, 0x0A, 0x06, // 113: q
    0x02, 0xDE, 0x07, 0x05, // 114: r
    0x02, 0xE5, 0x09, 0x06, // 115: s
    0x02, 0xEE, 0x06, 0x04, // 116: t
    0x02, 0xF4, 0x0A, 0x06, // 117: u
    0x02, 0xFE, 0x0A, 0x06, // 118: v
    0x03, 0x08, 0x0E, 0x08, // 119: w
    0x03, 0x16, 0x0A, 0x06, // 120: x
    0x03, 0x20, 0x0A, 0x06, // 121: y
    0x03, 0x2A, 0x09, 0x06, // 122: z
    
    // 中文标点符号
    0x03, 0x33, 0x08, 0x05, // 122: ，
    0x03, 0x3B, 0x08, 0x05, // 123: 。
    0x03, 0x43, 0x08, 0x05, // 124: ？
    0x03, 0x4B, 0x08, 0x05, // 125: ！
    0x03, 0x53, 0x08, 0x05, // 126: ：
    0x03, 0x5B, 0x08, 0x05, // 127: ；
    
    // 常用汉字 (这里只是示例，实际需要完整的字体数据)
    // 由于字体数据很大，这里只显示结构
    0x03, 0x63, 0x10, 0x0A, // 128: 中
    0x03, 0x73, 0x10, 0x0A, // 129: 文
    0x03, 0x83, 0x10, 0x0A, // 130: 显
    0x03, 0x93, 0x10, 0x0A, // 131: 示
    0x03, 0xA3, 0x10, 0x0A, // 132: 功
    0x03, 0xB3, 0x10, 0x0A, // 133: 能
    
    // 字体数据 (实际数据会很大，这里省略)
    // 每个字符的像素数据...
    
    // 结束标记
    0x00, 0x00, 0x00, 0x00
};

// 中文字体数据 - 16pt
const uint8_t ArialMT_Plain_16_CN[] PROGMEM = {
    0x10, // Width: 16
    0x13, // Height: 19
    0x20, // First char: 32
    0xE0, // Number of chars: 224
    
    // 字体数据结构与10pt类似，但尺寸更大
    // 实际实现时需要完整的字体数据
    0x00, 0x00, 0x00, 0x00
};

// 中文字体数据 - 24pt
const uint8_t ArialMT_Plain_24_CN[] PROGMEM = {
    0x18, // Width: 24
    0x1C, // Height: 28
    0x20, // First char: 32
    0xE0, // Number of chars: 224
    
    // 字体数据结构与10pt类似，但尺寸更大
    // 实际实现时需要完整的字体数据
    0x00, 0x00, 0x00, 0x00
};

#endif // OLED_CN
